'use strict';

// An os-conditional copy file tool. Selects a file to copy to the dest path based on the OS.
// Facilitates distributing scripts for multiple targets, and later selecting the correct one.
// Use: node copyfile <dest> [<defaultPath>] [darwin:<path>] [win32:<path>] [linux:<path>]

var fs = require('fs');
var os = require('os');

function splitPlatform(targets) {
  var osTargets = {};
  for (var t = 0; t < targets.length; t++) {
    var parts = targets[t].split(':');
    var platform, path;
    if (parts.length < 2) {
      path = parts[0];
      platform = 'default';
    } else {
      path = parts[1];
      platform = parts[0];
    }
    osTargets[platform] = path;
  }
  return osTargets;
}

function main(argv) {
  // parse args
  var args = argv.slice(2);
  var toFile = args[0];
  var fromFiles = splitPlatform(args.slice(1));
  var fromFile = fromFiles[os.platform()] || fromFiles['default'];
  if (!fromFile) {
    console.error('No file provided for platform (' + os.platform() + ').');
    process.exit(1);
  }
  if (!fs.existsSync(fromFile)) {
    // no source file, log and quit.
    console.log('copyfile called but '+fromFile+' doesn\'t exist');
    process.exit(0);
  }

  // copy file
  console.log('copying ' + fromFile + ' to ' + toFile);
  if (fs.existsSync(toFile)) {
    fs.unlinkSync(toFile);
  }
  fs.writeFileSync(toFile, fs.readFileSync(fromFile));

  // match permissions
  if (os.platform() !== 'win32') {
    fs.chmodSync(toFile, fs.statSync(fromFile).mode);
  }
}

main(process.argv);