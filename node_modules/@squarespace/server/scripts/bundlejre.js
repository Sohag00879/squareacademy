'use strict';

// downloadjre [options]
//
// downloads and unpacks a jre archive
//
//     -h, --help                 output usage information
//     -o, --output <dest>        Destination folder. Default '.'
//     -t, --untar                Untar file after downloading.
//     -z, --unzip                Unzip file after downloading.
//     -p, --platform <platform>  Target platform for JRE. Default os.platform()
//     -a, --arch <arch>          Target architecture for JRE. Default os.arch()
//     -j, --jreversion <ver>     Target version for JRE. Default latest
//     --clear                    Clear destination folder before downloading.
//                                WARNING this will rm -rf the folder!
//     --accept                   Accepts the JRE license at http://java.com/license


var fs = require('fs');
var os = require('os');
var program = require('commander');
var rimraf = require('rimraf');

var download = require('./utils/download');
var jreurl = require('./utils/jreurl');

function ensureEmpty(folder) {
  try {
    fs.accessSync(folder, fs.R_OK);
    rimraf.sync(folder);
  } catch(err) {
    // it's cool
  }
}

function main(options) {

  if (!options.accept) {
    console.error('You must accept the license at http://java.com/license.');
    process.exit(1);
  }

  console.log('Bundling compatible JRE (This may take a while)');

  var output = options.output || process.cwd();
  var platform = options.platform || os.platform();
  var arch = options.arch || os.arch();

  if (platform === "darwin" && arch === "arm64") {
    // There isn't an Oracle published arm64 binary of the current JRE version, use x64 emulation instead.
    console.log('Detected arm64 Mac, using x64 emulation with Rosetta 2 https://support.apple.com/en-us/HT211861')
    arch = "x64";
  }

  if (options.clear && options.output) {
    ensureEmpty(output);
  }

  var url = jreurl(platform, arch, options.jreversion);
  if (!url) {
    console.error('Bad JRE platform, arch or version:', platform, arch, options.jreversion);
    process.exit(1);
  }

  console.log('Downloading JRE from ' + url);

  var headers = {'Cookie': 'oraclelicense=accept-securebackup-cookie; Domain=.oracle.com'};
  download(url, output, options.untar, options.unzip, headers)
    .catch(function(e) {
      console.error('Failed to download '+url+'. '+e);
      process.exit(1);
    });
}

program
  .usage('[options]')
  .option('-o, --output <dest>', 'Destination folder. Default \'.\'')
  .option('-t, --untar', 'Untar file after downloading.')
  .option('-z, --unzip', 'Unzip file after downloading.')
  .option('-p, --platform <platform>', 'Target platform for JRE. Default os.platform()')
  .option('-a, --arch <arch>', 'Target architecture for JRE. Default os.arch()')
  .option('-j, --jreversion <ver>', 'Target version for JRE. Default latest')
  .option('--clear', 'Clear destination folder before downloading. WARNING this will rm -rf the folder!')
  .option('--accept', 'Accepts the JRE license at http://java.com/license')
  .parse(process.argv);

main(program);
