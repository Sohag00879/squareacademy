'use strict';

// xexec(cmds): executes a command line array in a cross platform safe manner

var os = require('os');
var execFile = require('child_process').execFileSync;

module.exports = {
  execSafe: function(cmds) {
    if (!cmds.join) {
      throw new Error("xexec(cmds) called with non-array argument");
    }
    console.log('Executing: '+cmds.join(' '));
    var file;
    if (os.platform() === 'win32') {
      file = 'cmd.exe';
      cmds = ['/s', '/c'].concat(cmds);
    } else {
      file = cmds[0];
      cmds = cmds.slice(1);
    }
    execFile(file, cmds, {stdio: 'inherit'});
  },

  splitArgs: function(argStr) {
    // get rid of outermost quotes
    var str = argStr.replace(/^(["'])(.*)\1$/, "$2");

    // parse argStr into tokens
    var boundary = null;
    var start = 0;
    var tokens = [];
    for (var i = 0; i < str.length; i++) {
      if (boundary === null) {

        // whitespace
        if (str[i] === ' ' || str[i] === '\t') {
          if (i > start) {
            tokens.push(str.slice(start, i));
          }
          start = i+1;
          continue;
        };

        // start of quote
        if (str[i] === "'" || str[i] === '"') {
          if (i > start) {
            tokens.push(str.slice(start, i));
          }
          boundary = str[i];
          start = i+1;
        }
      } else {

        // end of quote
        if (str[i] === boundary) {
          if (i > start) {
            tokens.push(str.slice(start, i));
          }
          boundary = null;
          start = i+1;
        }
      }
    }
    if (str.length > start) {
      tokens.push(str.slice(start, str.length));
    }
    // console.log(tokens);
    return tokens;
  }
}